apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-services
  namespace: demo-default
  labels:
    app: demo-services
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: demo-services
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '3'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '4'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/certificate-arn: [cert arn]
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/wafv2-acl-arn: [waf arn]
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=9
spec:
  ingressClassName: public-alb
  tls:
    - hosts:
      - "*.demo.com"
  rules:
    - host: api.demo.com
      http:
        paths:
          - path: /[service root path]
            pathType: Prefix
            backend:
              service:
                name: demo-services-[service name]
                port:
                  number: 80